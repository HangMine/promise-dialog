import{_ as e,c as a,o,Q as r}from"./chunks/framework.294d97cd.js";const m=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction.md","filePath":"guide/introduction.md"}'),t={name:"guide/introduction.md"},i=r('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><h2 id="什么是-promise-dialog" tabindex="-1">什么是 Promise Dialog? <a class="header-anchor" href="#什么是-promise-dialog" aria-label="Permalink to &quot;什么是 Promise Dialog?&quot;">​</a></h2><p>Promise Dialog让 模态框开发 简单 高效</p><h2 id="函数式调用" tabindex="-1">函数式调用 <a class="header-anchor" href="#函数式调用" aria-label="Permalink to &quot;函数式调用&quot;">​</a></h2><p>通过函数直接调起模态框，不用再写Modal组件，写visible、onOk、onCancel等参数</p><h2 id="promise管理模态框流程" tabindex="-1">promise管理模态框流程 <a class="header-anchor" href="#promise管理模态框流程" aria-label="Permalink to &quot;promise管理模态框流程&quot;">​</a></h2><p>promise管理，点击确认resolve，点击取消reject，让模态框流程、数据流更直观，让代码更简洁</p><h2 id="包含上下文" tabindex="-1">包含上下文 <a class="header-anchor" href="#包含上下文" aria-label="Permalink to &quot;包含上下文&quot;">​</a></h2><p>模态框内部的组件包含上下文，不会丢失上下文的配置、全局组件等</p><h2 id="适配vue和react" tabindex="-1">适配vue和react <a class="header-anchor" href="#适配vue和react" aria-label="Permalink to &quot;适配vue和react&quot;">​</a></h2><p>适配vue和react，和各种UI框架</p>',11),n=[i];function s(c,l,d,h,u,p){return o(),a("div",null,n)}const f=e(t,[["render",s]]);export{m as __pageData,f as default};
